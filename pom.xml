<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.sebpiller.iot</groupId>
    <artifactId>smart-lamp-parent</artifactId>
    <version>${revision}</version>

    <packaging>pom</packaging>
    <name>Smart Lamp - Parent</name>

    <properties>
        <!-- RELEASE PIPELINE VERSION -->
        <branch>0.1.8</branch><!-- fallback when not in a release branch-->
        <feature/> <!-- tag with the feature name for feature branches build -->
        <revision/><!-- will be assigned by jenkins -->
        <modifier>-SNAPSHOT</modifier><!-- replace with blank for a release deploy -->
        <revision>{branch}${feature}${revision}${modifier}</revision>

        <checkstyle.version>3.1.2</checkstyle.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
        <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
        <maven.javadoc.failOnError>false</maven.javadoc.failOnError>

        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssZ</maven.build.timestamp.format>

        <skipUTs>false</skipUTs>
        <surefire.jacoco.args/>

        <skipITs>false</skipITs>
        <failsafe.jacoco.args/>

        <jacoco.mincoverage>0%</jacoco.mincoverage>
        <failIfNoTests>false</failIfNoTests>
    </properties>

    <developers>
        <developer>
            <id>sebpiller</id>
            <name>Piller SÃ©bastien</name>
            <email>me@sebpiller.ch</email>
            <organization>none</organization>
            <timezone>+1</timezone>
            <url>https://github.com/sebpiller</url>
            <roles>
                <role>developer</role>
            </roles>
            <properties>
                <picUrl>https://fr.gravatar.com/userimage/203993716/6f8cf03f83f3f97a2e7b67834061a745.jpg?size=200
                </picUrl>
            </properties>
        </developer>
    </developers>

    <scm>
        <url>scm:git:http://git.home/spiller/smart-lamp.git</url>
        <connection>scm:git:http://git.home/spiller/smart-lamp.git</connection>
        <developerConnection>scm:git:http://git.home/spiller/smart-lamp.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>Gitea</system>
        <url>http://git.home/spiller/smart-lamp/issues</url>
    </issueManagement>

    <modules>
        <module>build-tools</module>
        <module>beatdetect-bpmsource</module>
        <module>bluetooth</module>
        <module>smart-lamp-api</module>
        <module>smart-lamp-sequencer</module>
        <module>luke-roberts-lamp-f</module>
        <module>luke-roberts-lamp-f-cli</module>
        <module>philips-hue</module>
        <module>philips-hue-cli</module>
        <!--<module>smart-lamp-amqp-web</module> WAY TOO LONG to build... -->
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- ======== CHILDREN =============== -->
            <dependency>
                <groupId>ch.sebpiller.iot</groupId>
                <artifactId>build-tools</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.sebpiller.iot</groupId>
                <artifactId>beatdetect-bpmsource</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.sebpiller.iot</groupId>
                <artifactId>bluetooth</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.sebpiller.iot</groupId>
                <artifactId>smart-lamp-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.sebpiller.iot</groupId>
                <artifactId>smart-lamp-sequencer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.sebpiller.iot</groupId>
                <artifactId>luke-roberts-lamp-f</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.sebpiller.iot</groupId>
                <artifactId>luke-roberts-lamp-f-cli</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.sebpiller.iot</groupId>
                <artifactId>philips-hue</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.sebpiller.iot</groupId>
                <artifactId>philips-hue-cli</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- ================================= -->

            <dependency>
                <groupId>ch.sebpiller</groupId>
                <artifactId>metronome</artifactId>
                <version>0.2.4.b4</version>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>5.7.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>5.7.0</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>3.19.0</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.30</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.2.3</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>4.4</version>
            </dependency>
            <dependency>
                <groupId>info.picocli</groupId>
                <artifactId>picocli</artifactId>
                <version>4.6.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.11</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.8.0</version>
            </dependency>

            <dependency>
                <groupId>net.compartmental.code</groupId>
                <artifactId>minim</artifactId>
                <version>2.2.2</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>1.27</version>
            </dependency>

            <dependency>
                <groupId>com.github.hypfvieh</groupId>
                <artifactId>bluez-dbus</artifactId>
                <version>0.1.3</version>
            </dependency>

            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>2.0.1.Final</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>6.1.6.Final</version>
                <!--
                  <version>7.0.0.Final</version> lead to:
                  javax.validation.NoProviderFoundException: Unable to create a Configuration, because no Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
                -->
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator-annotation-processor</artifactId>
                <version>6.1.6.Final</version>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>3.0.0</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.web</groupId>
                <artifactId>javax.el</artifactId>
                <version>2.2.6</version>
            </dependency>

            <dependency>
                <groupId>com.rabbitmq</groupId>
                <artifactId>amqp-client</artifactId>
                <version>5.10.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- logback as default logging implementation during tests. -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>${project.artifactId}.version</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>${project.artifactId}.version</exclude>
                </excludes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>1.2.7</version>
                    <configuration>
                        <updatePomFile>true</updatePomFile>
                        <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>flatten.clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.11.2</version>
                    <configuration>
                        <tag>${project.artifactId}-${project.version}</tag>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>

                <!-- deploy 2.8.x required to have distribution management configured in settings.xml instead of pom -->
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                    <!--<version>3.0.0-M1</version> see https://issues.apache.org/jira/browse/MDEPLOY-244-->
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.8.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M3</version>
                    <executions>
                        <execution>
                            <id>enforce-maven</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>3.6.0</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${checkstyle.version}</version>
                    <configuration>
                        <configLocation>smart-lamp/checkstyle_custom.xml</configLocation>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>ch.sebpiller.iot</groupId>
                            <artifactId>build-tools</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>8.32</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.6</version>
                    <executions>
                        <!-- Surefire -->
                        <execution>
                            <id>before-unit-test-execution</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <append>false</append>
                                <destFile>${project.build.directory}/UT-coverage.jacoco</destFile>
                                <propertyName>surefire.jacoco.args</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>after-unit-test-execution</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/UT-coverage.jacoco</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                            </configuration>
                        </execution>

                        <!-- Failsafe -->
                        <execution>
                            <id>before-integration-test-execution</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                            <configuration>
                                <append>false</append>
                                <destFile>${project.build.directory}/IT-coverage.jacoco</destFile>
                                <propertyName>failsafe.jacoco.args</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>after-integration-test-execution</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/IT-coverage.jacoco</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                            </configuration>
                        </execution>

                        <!-- Code coverage threshold -->
                        <execution>
                            <id>check-UT-coverage</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <excludes>
                                            <exclude>*Test</exclude>
                                        </excludes>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${jacoco.mincoverage}</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                                <dataFile>${project.build.directory}/UT-coverage.jacoco</dataFile>
                            </configuration>
                        </execution>

                        <execution>
                            <id>check-IT-coverage</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <excludes>
                                            <exclude>*Test</exclude>
                                        </excludes>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${jacoco.mincoverage}</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                                <dataFile>${project.build.directory}/IT-coverage.jacoco</dataFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.3.0</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <mainClass>ch.sebpiller.epg.scrapper.ScrapperCli</mainClass>
                            </manifest>
                        </archive>
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.2.0</version>
                    <executions>
                        <execution>
                            <id>add-integration-test-source</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>src/it/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-integration-test-resource</id>
                            <phase>generate-test-resources</phase>
                            <goals>
                                <goal>add-test-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>src/it/resources</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <!-- surefire 3.x required for junit 5 -->
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>

                    <configuration>
                        <argLine>@{surefire.jacoco.args}</argLine>
                        <skipTests>${skipUTs}</skipTests>
                        <excludes>
                            <!-- Do not process integration tests with surefire. Failsafe will do the job -->
                            <exclude>**/*IntegrationTest.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M5</version>

                    <configuration>
                        <!-- beware of timeouts -->
                        <forkedProcessTimeoutInSeconds>0</forkedProcessTimeoutInSeconds>
                        <forkedProcessExitTimeoutInSeconds>0</forkedProcessExitTimeoutInSeconds>
                        <testSourceDirectory>${project.basedir}/src/it/java</testSourceDirectory>
                        <includes>
                            <include>**/*IntegrationTest.java</include>
                        </includes>
                        <argLine>@{failsafe.jacoco.args}</argLine>
                    </configuration>
                    <executions>
                        <execution>
                            <id>run-integration-test</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.9.1</version>
                    <executions>
                        <execution>
                            <id>build-site</id>
                            <goals>
                                <goal>site</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>pack-site</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>

        </plugins>

    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.2.2</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <xmlOutputDirectory>target/site</xmlOutputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.8.1</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                            <report>property-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>summary</report>
                            <report>mailing-lists</report>
                            <report>team</report>
                            <report>scm</report>

                            <report>modules</report>
                            <report>licenses</report>

                            <report>issue-management</report>
                            <report>ci-management</report>
                            <report>distribution-management</report>

                            <report>plugins</report>
                            <report>plugin-management</report>

                            <report>dependencies</report>
                            <report>dependency-convergence</report>
                            <report>dependency-info</report>
                            <report>dependency-management</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <append>false</append>
                    <dataFile>${project.build.directory}/UT-coverage.jacoco</dataFile>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <append>false</append>
                    <dataFile>${project.build.directory}/IT-coverage.jacoco</dataFile>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report-integration</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

</project>